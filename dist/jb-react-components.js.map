{"version":3,"sources":["webpack://ReactComponents/webpack/universalModuleDefinition","webpack://ReactComponents/webpack/bootstrap","webpack://ReactComponents/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactComponents/./src/elements/If.tsx","webpack://ReactComponents/./src/elements/Overlay.tsx","webpack://ReactComponents/./src/elements/Button.tsx","webpack://ReactComponents/./src/components/tabs/external/Tab.tsx","webpack://ReactComponents/./src/components/tabs/external/TabHeader.tsx","webpack://ReactComponents/./src/components/tabs/external/TabContent.tsx","webpack://ReactComponents/./src/components/collapsable/CollapsableHeader.tsx","webpack://ReactComponents/./src/components/collapsable/CollapsableContent.tsx","webpack://ReactComponents/./src/elements/Input.tsx","webpack://ReactComponents/./src/index-bundle.ts","webpack://ReactComponents/./src/components/messageBox/MessageBox.tsx","webpack://ReactComponents/./src/components/Toaster.tsx","webpack://ReactComponents/./src/utils/EventQueue.ts","webpack://ReactComponents/./src/components/tabs/Tabs.tsx","webpack://ReactComponents/./src/components/tabs/internal/TabHeader.tsx","webpack://ReactComponents/./src/components/tabs/internal/TabContent.tsx","webpack://ReactComponents/./src/components/collapsable/Collapsable.tsx","webpack://ReactComponents/./src/elements/Checkbox.tsx","webpack://ReactComponents/./src/elements/FileInput.tsx","webpack://ReactComponents/./src/elements/Label.tsx","webpack://ReactComponents/./src/elements/Select.tsx","webpack://ReactComponents/./src/elements/Thumbnail.tsx","webpack://ReactComponents/./src/components/Group.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","If","React","Component","this","props","expression","children","Overlay","jsx","className","onClick","createElement","Button","super","state","disabled","type","title","prevProps","setState","Tab","TabHeader","TabContent","CollapsableHeader","collapsed","onToggle","CollapsableContent","Input","isValid","validator","placeholder","onChange","e","currentTarget","onFocus","val","MessageBox","Toaster","Tabs","Collapsable","Checkbox","CheckboxCrossTypes","FileInput","Label","Select","Thumbnail","Group","toaster","success","error","messageBox","showOkCancel","show","instance","okCancelBtns","msg","buttons","Promise","resolve","hide","html","map","b","timeoutHandles","message","fadeOut","triggerDisable","triggerFadeOut","length","forEach","clearTimeout","disposeEvents","queue","clear","eventQueue","functions","handles","fn","ms","handle","setTimeout","push","index","indexOf","splice","tabs","Error","buildTabsFromProps","tab","refreshProperty","allowClose","id","enabled","selectTab","active","element","tabsFromOldProps","tabsFromNewProps","checkTabRefreshment","getRealTab","find","x","tabFromOldProps","tabFromNewProps","tabFromState","newTab","keys","oldVal","newVal","stateVal","oldTabs","newTabs","filter","t2","childArray","Array","isArray","reactTab","tabHeader","tabContent","firstEnabledTab","keepOpen","header","content","newHeaderProps","newContentProps","cloneElement","additionalFunction","checked","crossType","DefaultCross","onStateChange","acceptString","accept","reduce","pV","cV","fileId","Date","getTime","target","files","multiple","htmlFor","fileList","item","selectedKey","filtered","concat","options","dropDownOpened","fetchBlur","selectRef","createRef","ref","openDropdown","getValue","tabIndex","select","el","found","current","parentElement","closeDropdown","document","addEventListener","removeEventListener","items","adjustFiltered","src"],"mappings":"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","file":"jb-react-components.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactComponents\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactComponents\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import * as React from \"react\";\r\nimport IIfProps from \"../interfaces/IIfProps\";\r\n\r\nexport default class If extends React.Component<IIfProps, {}> {\r\n    public render(): JSX.Element {\r\n        if (this.props.expression) {\r\n            return this.props.children;\r\n        }\r\n        return null;\r\n    }\r\n}","import * as React from \"react\";\r\nimport IOverlayProps from \"../interfaces/IOverlayProps\";\r\nimport \"./../style/overlay.scss\";\r\n\r\nexport default class Overlay extends React.Component<IOverlayProps, {}> {\r\n    public render(): JSX.Element {\r\n        const jsx: JSX.Element = (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"overlay-content\">\r\n                    <div>\r\n                    {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const props: any = {\r\n            className: \"overlay-container\"\r\n        };\r\n\r\n        if (this.props.onClick) {\r\n            props.onClick = this.props.onClick;\r\n        }\r\n\r\n        return React.createElement(\"div\", props, jsx);\r\n    }\r\n}","import * as React from \"react\";\r\nimport IButtonProps from \"../interfaces/IButtonProps\";\r\nimport \"./../style/button.scss\";\r\n\r\nexport default class Button extends React.Component<IButtonProps, IButtonState> {\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: props.disabled\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className={`btn btn--${this.props.type || \"default\"} ${this.state.disabled ? \"btn--disabled\" : \"\"}`} onClick={() => this.onClick()}>{this.props.title}</div>\r\n        )\r\n    }\r\n\r\n    private onClick(): void {\r\n        if (!this.state.disabled) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: IButtonProps): void {\r\n        if (this.props.disabled !== prevProps.disabled) {\r\n            this.setState({\r\n                disabled: this.props.disabled\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\ninterface IButtonState {\r\n    disabled?: boolean;\r\n}","import * as React from \"react\";\r\nimport ITabProps from \"../../../interfaces/tabs/ITabProps\";\r\n\r\nexport default class Tab extends React.Component<ITabProps, {}> {\r\n}","import * as React from \"react\";\r\nimport ITabHeaderProps from \"../../../interfaces/tabs/ITabHeaderProps\";\r\n\r\nexport default class TabHeader extends React.Component<ITabHeaderProps, {}> {\r\n}","import * as React from \"react\";\r\nimport ITabContentProps from \"../../../interfaces/tabs/ITabContentProps\";\r\n\r\nexport default class TabContent extends React.Component<ITabContentProps, {}> {\r\n}","import * as React from \"react\";\r\nimport ICollapsableHeaderProps from \"../../interfaces/collapsable/ICollapsableHeaderProps\";\r\n\r\nexport default class CollapsableHeader extends React.Component<ICollapsableHeaderProps, {}> {\r\n    constructor(props: ICollapsableHeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={`collapsable-header ${this.props.collapsed ? \"collapsable-header--collapsed\" : \"\"}`} onClick={() => this.props.onToggle()}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport ICollapsableContentProps from \"../../interfaces/collapsable/ICollapsableContentProps\";\r\n\r\nexport default class CollapsableContent extends React.Component<ICollapsableContentProps, {}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={`collapsable-content ${this.props.collapsed ? \"collapsable-content--collapsed\" : \"\"}`}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport IInputProps from \"../interfaces/IInputProps\";\r\nimport \"./../style/input.scss\";\r\n\r\nexport default class Input extends React.Component<IInputProps, IInputState> {\r\n    constructor(props: IInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: props.value || \"\",\r\n            isValid: props.validator ? props.validator(props.value || \"\") : true\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <input \r\n                placeholder={this.props.placeholder} \r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.onChange(e.currentTarget.value)}\r\n                value={this.state.value}\r\n                onFocus={() => this.props.onFocus ? this.props.onFocus() : null}\r\n                className={`input ${this.props.className || \"\"} ${!this.state.isValid ? \"input--invalid\" : \"\"}`}\r\n            />\r\n        );\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: IInputProps): void {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.setState({ value: this.props.value });\r\n        }\r\n    }\r\n\r\n    private onChange(val: string) {\r\n        let isValid: boolean = true;\r\n\r\n        if (this.props.validator) {\r\n            isValid = this.props.validator(val);\r\n        }\r\n\r\n        this.setState({\r\n            isValid: isValid,\r\n            value: val\r\n        });\r\n    \r\n        if (this.props.onChange) {\r\n            this.props.onChange(val);\r\n        }\r\n    }\r\n}\r\n\r\ninterface IInputState {\r\n    value: string;\r\n    isValid: boolean;\r\n}","// index-bundle must be .ts to force tsc to create a definition file!\r\n\r\n// components\r\nimport MessageBox, { showOkCancel, show } from \"./components/messageBox/MessageBox\";\r\nimport Toaster, { success, error } from \"./components/Toaster\";\r\nimport Tabs from \"./components/tabs/Tabs\";\r\nimport Tab from \"./components/tabs/external/Tab\";\r\nimport TabHeader from \"./components/tabs/external/TabHeader\";\r\nimport TabContent from \"./components/tabs/external/TabContent\";\r\nimport Collapsable from \"./components/collapsable/Collapsable\";\r\nimport CollapsableHeader from \"./components/collapsable/CollapsableHeader\";\r\nimport CollapsableContent from \"./components/collapsable/CollapsableContent\";\r\n\r\n\r\n// elements\r\nimport Button from \"./elements/Button\";\r\nimport Checkbox, { CheckboxCrossTypes } from \"./elements/Checkbox\";\r\nimport FileInput from \"./elements/FileInput\";\r\nimport If from \"./elements/If\";\r\nimport Input from \"./elements/Input\";\r\nimport Label from \"./elements/Label\";\r\nimport Overlay from \"./elements/Overlay\";\r\nimport Select from \"./elements/Select\";\r\nimport Thumbnail from \"./elements/Thumbnail\";\r\nimport Group from \"./components/Group\";\r\n\r\n//import { IIfProps } from \"./interfaces/IIfProps\";\r\nimport IButtonProps from \"./interfaces/IButtonProps\";\r\nimport ICheckboxProps from \"./interfaces/ICheckboxProps\";\r\nimport IFileUploadProps from \"./interfaces/IFileUploadProps\";\r\nimport IIfProps from \"./interfaces/IIfProps\";\r\nimport IInputProps from \"./interfaces/IInputProps\";\r\nimport ILabelProps from \"./interfaces/ILabelProps\";\r\nimport IOverlayProps from \"./interfaces/IOverlayProps\";\r\nimport ISelectItem from \"./interfaces/ISelectItem\";\r\nimport ISelectProps from \"./interfaces/ISelectProps\";\r\nimport IThumbnailProps from \"./interfaces/IThumbnailProps\";\r\nimport ITabsProps from \"./interfaces/tabs/ITabsProps\";\r\nimport ITabProps from \"./interfaces/tabs/ITabProps\";\r\nimport ITabHeaderProps from \"./interfaces/tabs/ITabHeaderProps\";\r\nimport ITabContentProps from \"./interfaces/tabs/ITabContentProps\";\r\nimport ITab from \"./interfaces/tabs/ITab\";\r\nimport IGroupProps from \"./interfaces/IGroupProps\";\r\nimport ICollapsableProps from \"./interfaces/collapsable/ICollapsableProps\";\r\nimport ICollapsableHeaderProps from \"./interfaces/collapsable/ICollapsableHeaderProps\";\r\nimport ICollapsableContentProps from \"./interfaces/collapsable/ICollapsableContentProps\";\r\n\r\nconst toaster = {\r\n    success, error\r\n}\r\n\r\nconst messageBox = {\r\n    showOkCancel,\r\n    show\r\n}\r\n\r\nexport {\r\n    MessageBox,\r\n    Toaster,\r\n    Button,\r\n    Checkbox,\r\n    CheckboxCrossTypes,\r\n    FileInput,\r\n    If,\r\n    Input,\r\n    Label,\r\n    Overlay,\r\n    Select,\r\n    Thumbnail,\r\n    Tabs,\r\n    Tab,\r\n    TabHeader,\r\n    TabContent,\r\n    Group,\r\n    Collapsable,\r\n    CollapsableHeader,\r\n    CollapsableContent,\r\n\r\n    IButtonProps,\r\n    ICheckboxProps,\r\n    IFileUploadProps,\r\n    IIfProps,\r\n    IInputProps,\r\n    ILabelProps,\r\n    IOverlayProps,\r\n    ISelectItem,\r\n    ISelectProps,\r\n    IThumbnailProps,\r\n    ITabsProps,\r\n    ITabProps,\r\n    ITabContentProps,\r\n    ITabHeaderProps,\r\n    ITab,\r\n    IGroupProps,\r\n    ICollapsableProps,\r\n    ICollapsableHeaderProps,\r\n    ICollapsableContentProps,\r\n\r\n    toaster,\r\n    messageBox\r\n}","import * as React from \"react\";\r\nimport Overlay from \"../../elements/Overlay\";\r\nimport \"./../../style/messagebox.scss\";\r\nimport { IMsgBoxButton } from \"./IMsgBoxButton\";\r\nimport Button from \"./../../elements/Button\";\r\n\r\nlet instance: MessageBox = null;\r\nconst okCancelBtns: IMsgBoxButton[] = [{ title: \"OK\", onClick: null}, { title: \"Abbrechen\", onClick: null }];\r\n\r\nexport function show(title: string, msg: string, buttons: IMsgBoxButton[]): void {\r\n    instance.show(title, msg, buttons);\r\n}\r\n\r\nexport function showOkCancel(title: string, msg: string): Promise<boolean> {\r\n    return new Promise((resolve: (val: boolean) => void) => {\r\n        okCancelBtns[0].onClick = () => {\r\n            resolve(true);\r\n            instance.hide();\r\n        };\r\n        okCancelBtns[1].onClick = () => {\r\n            resolve(false);\r\n            instance.hide();\r\n        };\r\n        instance.show(title, msg, okCancelBtns);\r\n    });\r\n}\r\n\r\nexport default class MessageBox extends React.Component<{}, IMessageBoxState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            title: \"\",\r\n            msg: \"\",\r\n            buttons: []\r\n        }\r\n        instance = this;\r\n    }\r\n\r\n    public hide(): void {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    public show(title: string, msg: string, buttons: IMsgBoxButton[]): void {\r\n        const state: IMessageBoxState = {\r\n            title,\r\n            msg,\r\n            show: true,\r\n            buttons\r\n        };\r\n        this.setState(state);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const html: JSX.Element = (\r\n            <Overlay>\r\n                <div className=\"msg-box\">\r\n                    <div className=\"msg-box-title\">{this.state.title}</div>\r\n                    <div className=\"msg-box-msg\">{this.state.msg}</div>\r\n                    <div className=\"msg-box-buttons\">\r\n                        {this.state.buttons.map(b => (<Button key={b.title} onClick={b.onClick} title={b.title}/>))}\r\n                    </div>\r\n                </div>\r\n            </Overlay>\r\n        );\r\n\r\n        return this.state.show ? html : null;\r\n    }\r\n}\r\n\r\nexport interface IMessageBoxState {\r\n    show: boolean;\r\n    title: string;\r\n    msg: string;\r\n    buttons: IMsgBoxButton[];\r\n}","import * as React from \"react\";\r\nimport If from \"./../elements/If\";\r\nimport \"./../style/toaster.scss\";\r\nimport eventQueue from \"./../utils/EventQueue\";\r\n\r\nlet instance: Toaster = null;\r\n\r\nexport function success(msg: string) {\r\n    instance.show(msg, \"success\");\r\n}\r\n\r\nexport function error(msg: string) {\r\n    instance.show(msg, \"error\");\r\n}\r\n\r\nexport default class Toaster extends React.Component<{}, IToasterState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            message: \"\",\r\n            type: null,\r\n            fadeOut: false\r\n        }\r\n        instance = this;\r\n        this.triggerDisable = this.triggerDisable.bind(this);\r\n        this.triggerFadeOut = this.triggerFadeOut.bind(this);\r\n    }\r\n\r\n    private timeoutHandles: number[] = [];\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <If expression={this.state.show}>\r\n                <div className={`message ${this.state.fadeOut ? \"message--fade-out\" : \"\"}`}>\r\n                    <div className={`message--${this.state.type}`}>\r\n                        {this.state.message}\r\n                    </div>\r\n                </div>\r\n            </If>\r\n        )\r\n    }\r\n\r\n    public show(msg: string, type: \"error\" | \"info\" | \"success\"): void {\r\n        if (this.timeoutHandles.length > 0) {\r\n            this.timeoutHandles.forEach(t => clearTimeout(t));\r\n            this.timeoutHandles.length = 0;\r\n        }\r\n\r\n        this.setState({\r\n            fadeOut: false,\r\n            show: true,\r\n            message: msg,\r\n            type: type\r\n        });\r\n\r\n        this.disposeEvents();\r\n        eventQueue.queue(this.triggerFadeOut, 2000);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this.disposeEvents();\r\n    }\r\n\r\n    private disposeEvents() {\r\n        eventQueue.clear(this.triggerDisable);\r\n        eventQueue.clear(this.triggerFadeOut);\r\n    }\r\n\r\n    private triggerFadeOut(): void {\r\n        this.setState({\r\n            fadeOut: true\r\n        });\r\n        eventQueue.queue(this.triggerDisable, 2000);\r\n    }\r\n\r\n    private triggerDisable(): void {\r\n        this.setState({ show: false });\r\n    }\r\n}\r\n\r\ninterface IToasterState {\r\n    show: boolean;\r\n    message: string;\r\n    type: \"error\" | \"info\" | \"success\" | null;\r\n    fadeOut: boolean;\r\n} ","class EventQueue {\r\n    private functions: (() => void)[] = [];\r\n    private handles: number[] = [];\r\n\r\n    public queue(fn: () => any, ms: number): void {\r\n        this.clear(fn);\r\n        const handle: number = window.setTimeout(fn, ms);\r\n        this.functions.push(fn);\r\n        this.handles.push(handle);\r\n    }\r\n\r\n    public clear(fn: () => any): void {\r\n        const index: number = this.functions.indexOf(fn);\r\n        if (index > -1) {\r\n            clearTimeout(this.handles[index]);\r\n            this.functions.splice(index, 1);\r\n            this.handles.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventQueue = new EventQueue();\r\n\r\nexport default eventQueue;","import * as React from \"react\";\r\nimport ITabsProps from \"../../interfaces/tabs/ITabsProps\";\r\nimport TabHeader from \"./internal/TabHeader\";\r\nimport TabContent from \"./internal/TabContent\";\r\nimport \"./../../style/tabs.scss\";\r\nimport ITab from \"../../interfaces/tabs/ITab\";\r\nimport Tab from \"./external/Tab\";\r\n\r\nimport TabHeaderExternal from \"./external/TabHeader\";\r\nimport TabContentExternal from \"./external/TabContent\";\r\nimport ITabProps from \"../../interfaces/tabs/ITabProps\";\r\n\r\nexport default class Tabs extends React.Component<ITabsProps, ITabsState> {\r\n    constructor(props: ITabsProps) {\r\n        super(props);\r\n\r\n        if (props.tabs && props.children) {\r\n            throw new Error(\"Not able to set tabs through both properties\");\r\n        }\r\n\r\n        this.state = {\r\n            tabs: this.buildTabsFromProps(props) || []\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"tabs\">\r\n                <div className=\"tabs-bar\">\r\n                    {this.state.tabs.map(tab => <TabHeader refreshProperty={tab.refreshProperty} allowClose={tab.allowClose} key={tab.id} disabled={!tab.enabled} onClick={() => this.selectTab(tab)} active={tab.active} title={tab.title}/>)}\r\n                </div>\r\n                <div className=\"tabs-content\">\r\n                    {this.state.tabs.map(tab => <TabContent refreshProperty={tab.refreshProperty} key={tab.id} active={tab.active} element={tab.element}/>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: ITabsProps) {\r\n        const tabsFromOldProps: ITab[] = this.buildTabsFromProps(prevProps);\r\n        const tabsFromNewProps: ITab[] = this.buildTabsFromProps(this.props);\r\n        \r\n        if (this.checkTabRefreshment(tabsFromOldProps, tabsFromNewProps)) {\r\n            // if refresh required -> use current state but changed from props\r\n            const tabs = tabsFromOldProps.map(tab => this.getRealTab(tab, tabsFromNewProps.find(x => x.id === tab.id), this.state.tabs.find(x => x.id === tab.id)));\r\n            this.setState({\r\n                tabs: tabs\r\n            });\r\n        }\r\n    }\r\n\r\n    private getRealTab(tabFromOldProps: ITab, tabFromNewProps: ITab, tabFromState: ITab): ITab {\r\n        const newTab: ITab = {} as ITab;\r\n        Object.keys(tabFromOldProps).forEach((key: string) => {\r\n            const oldVal: any = tabFromOldProps[key];\r\n            const newVal: any = tabFromNewProps[key];\r\n            const stateVal: any = tabFromState[key];\r\n            newTab[key] = oldVal !== newVal ? newVal : stateVal;\r\n        });\r\n\r\n        return newTab;\r\n    }\r\n\r\n    private checkTabRefreshment(oldTabs: ITab[], newTabs: ITab[]): boolean {\r\n        const update: boolean = oldTabs.length !== newTabs.length ||\r\n            oldTabs.filter(t => newTabs.find(t2 => t2.id === t.id && \r\n                t2.active === t.active && t2.enabled === t.enabled && \r\n                t2.refreshProperty === t.refreshProperty)).length !== oldTabs.length;\r\n        return update;\r\n    }\r\n\r\n    public selectTab(tab: ITab) {\r\n        if (tab.enabled) {\r\n            const tabs = this.state.tabs.map((t: ITab) =>  {\r\n                t.active = t.id === tab.id;\r\n                return t;\r\n            });\r\n            this.setState({\r\n                tabs\r\n            });\r\n        }\r\n    }\r\n\r\n    private buildTabsFromProps(props: ITabsProps): ITab[] {\r\n        if (props.tabs) {\r\n            return props.tabs;\r\n        }\r\n\r\n        let childArray: any[] = [];\r\n\r\n        if (Array.isArray(props.children)) {\r\n            childArray = props.children;\r\n        } else {\r\n            childArray.push(props.children);\r\n        }\r\n\r\n        const tabs: ITab[] = [];\r\n\r\n        childArray.forEach((reactTab: React.ReactElement<ITabProps>) => {\r\n            const tab: ITab = {\r\n                enabled: !reactTab.props.disabled,\r\n                active: reactTab.props.active,\r\n                id: reactTab.props.id,\r\n                refreshProperty: reactTab.props.refreshProperty\r\n            } as any;\r\n\r\n            if (!(reactTab.type === Tab)) {\r\n                throw new Error(\"unexpected type. Expected chidl to be of type 'Tab'\");\r\n            }\r\n\r\n            const tabHeader: any = (reactTab.props as any).children.find((x: any) => x.type === TabHeaderExternal);\r\n            if (!tabHeader) {\r\n                throw new Error(\"expected one child of type 'TabHeader'\");\r\n            }\r\n\r\n            const title: string = tabHeader.props.children;\r\n            tab.title = title;\r\n            tab.allowClose = tabHeader.props.allowClose;\r\n\r\n            const tabContent: any = (reactTab.props as any).children.find((x: any) => x.type === TabContentExternal);\r\n            if (!tabContent) {\r\n                throw new Error(\"expected one child of type 'TabContent'\");\r\n            }\r\n\r\n            tab.element = (<div>{tabContent.props.children}</div>);\r\n\r\n            tabs.push(tab);\r\n        });\r\n\r\n        if (tabs.length > 0 && !tabs.find(x => x.active)) {\r\n            const firstEnabledTab: ITab = tabs.find(x => x.enabled);\r\n            if (firstEnabledTab) {\r\n                firstEnabledTab.active = true;\r\n            }\r\n        }\r\n\r\n        return tabs;\r\n    }\r\n}\r\n\r\nexport interface ITabsState {\r\n    tabs: ITab[];\r\n}","import * as React from \"react\";\r\nimport If from \"./../../../elements/If\";\r\n\r\nexport default class TabHeader extends React.Component<ITabsHeaderProps, {}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={`tab-header ${this.props.allowClose ? \"tab-header--closeable\" : \"\"} ${this.props.active ? \"tab-header--active\" : \"tab-header--inactive\"} ${this.props.disabled ? \"tab-header--disabled\" : \"\"}`} onClick={() => this.props.onClick()}>\r\n                <span>{this.props.title}</span><If expression={this.props.allowClose}><span>x</span></If>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface ITabsHeaderProps {\r\n    title: string;\r\n    active?: boolean;\r\n    disabled?: boolean;\r\n    onClick: () => void;\r\n    allowClose?: boolean;\r\n    refreshProperty?: any;\r\n}","import * as React from \"react\";\r\n\r\n// TODO: Remove props.children maybe\r\nexport default class TabContent extends React.Component<ITabContentProps, ITabContentState> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={`tab-body ${this.props.active ? \"tab-body--active\" : \"\"}`}>\r\n                { this.props.element || this.props.children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface ITabContentProps {\r\n    active?: boolean;\r\n    element?: React.ReactElement;\r\n    children?: React.ReactElement | React.ReactElement[];\r\n    refreshProperty?: any;\r\n}\r\n\r\ninterface ITabContentState {\r\n    active: boolean;\r\n}","import * as React from \"react\";\r\nimport ICollapsableProps from \"../../interfaces/collapsable/ICollapsableProps\";\r\nimport \"./../../style/collapsable.scss\";\r\nimport CollapsableHeader from \"./CollapsableHeader\";\r\nimport ICollapsableHeaderProps from \"../../interfaces/collapsable/ICollapsableHeaderProps\";\r\nimport ICollapsableContentProps from \"../../interfaces/collapsable/ICollapsableContentProps\";\r\nimport CollapsableContent from \"./CollapsableContent\";\r\n\r\nexport default class Collapsable extends React.Component<ICollapsableProps, ICollapsableState> {\r\n    constructor(props: ICollapsableProps) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: props.collapsed,\r\n            keepOpen: props.keepOpen\r\n        }\r\n    }\r\n    \r\n    public render(): JSX.Element {\r\n        let header: React.ReactElement<ICollapsableHeaderProps> = this.props.children.find(x => x.type === CollapsableHeader);\r\n        let content: React.ReactElement<ICollapsableContentProps> = this.props.children.find(x => x.type === CollapsableContent);\r\n\r\n        const newHeaderProps = { ...header.props };\r\n        const newContentProps = { ...content.props };\r\n        newHeaderProps.collapsed = this.state.collapsed && !this.state.keepOpen;\r\n        newHeaderProps.onToggle = this.onToggle.bind(this, newHeaderProps.onToggle);\r\n        newContentProps.collapsed = this.state.collapsed && !this.state.keepOpen;\r\n        \r\n        header = React.cloneElement(header, newHeaderProps);            \r\n        content = React.cloneElement(content, newContentProps);\r\n\r\n        const children: React.ReactElement[] = [header, content];\r\n\r\n        return (\r\n            <div className={`collapsable ${this.props.className || \"\"} ${this.state.collapsed ? \"collapsable--collapsed\" : \"\"}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: ICollapsableProps) {\r\n        if (prevProps.keepOpen !== this.props.keepOpen) {\r\n            this.setState({ keepOpen: this.props.keepOpen });\r\n        }\r\n    }\r\n\r\n    private onToggle(additionalFunction: (collapsed: boolean) => void): void {\r\n        if (this.state.keepOpen) {\r\n            return;\r\n        }\r\n\r\n        const collapsed = !this.state.collapsed;\r\n        this.setState({ collapsed: collapsed });\r\n\r\n        if (additionalFunction) {\r\n            additionalFunction(collapsed);\r\n        }\r\n    }\r\n}\r\n\r\ninterface ICollapsableState {\r\n    collapsed: boolean;\r\n    keepOpen: boolean;\r\n}","import * as React from \"react\";\r\nimport \"./../style/checkbox.scss\";\r\nimport ICheckboxProps from \"../interfaces/ICheckboxProps\";\r\n// see: https://github.com/Jimdo/typings-for-css-modules-loader\r\n\r\nexport default class Checkbox extends React.Component<ICheckboxProps, ICheckboxState> {\r\n    constructor(props: ICheckboxProps) {\r\n        super(props);\r\n        this.state = {\r\n            checked: props.checked,\r\n            disabled: props.disabled\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div \r\n                className={`chk-box ${this.state.disabled ? 'chk-box--disabled' : ''} ${this.state.checked ? 'chk-box--checked' : ''} ${this.props.crossType || CheckboxCrossTypes.DefaultCross}`} \r\n                onClick={() => this.onClick()}/>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ICheckboxProps) {\r\n        if (this.props.disabled !== prevProps.disabled || this.props.checked !== prevProps.checked) {\r\n            this.setState({\r\n                disabled: this.props.disabled,\r\n                checked: this.props.checked\r\n            });\r\n        }\r\n    }\r\n\r\n    private onClick(): void {\r\n        if (!this.state.disabled) {\r\n            let checked: boolean = !this.state.checked;\r\n            this.setState({\r\n                checked: checked\r\n            });\r\n            \r\n            if (this.props.onStateChange) {\r\n                this.props.onStateChange(checked);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport enum CheckboxCrossTypes {\r\n    DefaultCross = \"DefaultCross\",\r\n    GreenHook = \"GreenHook\"\r\n}\r\n\r\ninterface ICheckboxState {\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}","import * as React from \"react\";\r\nimport IFileUploadProps from \"../interfaces/IFileUploadProps\";\r\nimport \"./../style/fileinput.scss\";\r\n\r\nexport default class FileInput extends React.Component<IFileUploadProps, IFileInputState> {\r\n    constructor(props: IFileUploadProps) {\r\n        super(props);\r\n        this.state = {\r\n            isValid: props.validator ? props.validator(null) : true\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const acceptString: string = this.props.accept ? this.props.accept.reduce((pV: string, cV: string) => `${pV},${cV}`) : null;\r\n        const date: number = new Date().getTime();\r\n        const fileId: string = `file-${date}`;\r\n\r\n        return (\r\n            <div className={`file-input ${!this.state.isValid ? \"file-input--invalid\": \"\"}`}>\r\n                <input type=\"file\" id={fileId} onChange={e => this.onChange(e.target.files)} multiple={!!this.props.multiple} accept={acceptString}></input>\r\n                <label htmlFor={fileId}>{this.props.title}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange(fileList: FileList) {\r\n        const files: File[] = [];\r\n        for (let i = 0; i < fileList.length; i++) {\r\n            files.push(fileList.item(i));\r\n        }\r\n\r\n        let isValid: boolean = true;\r\n        \r\n        if (this.props.validator) {\r\n            isValid = this.props.validator(files);\r\n        }\r\n\r\n        this.setState({\r\n            isValid: isValid\r\n        });\r\n        \r\n        if (this.props.multiple) {\r\n            this.props.onChange(files)\r\n        } else {\r\n            this.props.onChange(files[0]);\r\n        }\r\n    }\r\n}\r\n\r\ninterface IFileInputState {\r\n    isValid: boolean;\r\n}","import * as React from \"react\";\r\nimport ILabelProps from \"../interfaces/ILabelProps\";\r\nimport \"./../style/label.scss\";\r\n\r\nexport default class Label extends React.Component<ILabelProps, ILabelState> {\r\n    constructor(props: ILabelProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.value\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"lbl\" >{this.state.value}</div>\r\n        );\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: ILabelProps): void {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.setState({ value: this.props.value });\r\n        }\r\n    }\r\n}\r\n\r\ninterface ILabelState {\r\n    value: string;\r\n}","import * as React from \"react\";\r\nimport Input from \"./Input\";\r\nimport ISelectProps from \"../interfaces/ISelectProps\";\r\nimport ISelectItem from \"../interfaces/ISelectItem\";\r\nimport \"./../style/select.scss\";\r\n\r\nexport default class Select extends React.Component<ISelectProps, ISelectState> {\r\n\r\n    constructor(props: ISelectProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedKey: props.selectedKey || \"\",\r\n            filtered: [].concat(props.options || []),\r\n            options: [].concat(props.options || []),\r\n            dropDownOpened: false,\r\n            isValid: props.validator ? props.validator(props.selectedKey || \"\") : true\r\n        }\r\n        this.fetchBlur = this.fetchBlur.bind(this);\r\n        this.selectRef = React.createRef();\r\n    }\r\n\r\n    private selectRef: any;\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n                <div className={`select ${this.props.className || \"\"} ${!this.state.isValid ? \"select--invalid\" : \"\"}`} ref={this.selectRef}>\r\n                <Input onFocus={() => this.openDropdown()} value={this.getValue(this.state.selectedKey)} onChange={(val) => this.filter(val)}/>\r\n                <div className={`select-results ${this.state.dropDownOpened ? \"select-results--open\" : \"\"}`}>\r\n                    {this.state.filtered.filter(x => x.key).map(i => (<div tabIndex={0} className=\"select-item\" key={i.key} onClick={(e) => this.select(i, e.currentTarget)}>{i.value}</div>))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private fetchBlur(e: MouseEvent): void {\r\n        if (this.state.dropDownOpened) {// && target.className.indexOf(\"select-item\") <= -1) {\r\n            let el: any = e.target;\r\n            let found: boolean = false;\r\n\r\n            while (el !== null) {\r\n                if (el === this.selectRef.current) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n\r\n                el = el.parentElement;\r\n            }\r\n\r\n            if (!found) {\r\n                this.closeDropdown();\r\n            }\r\n        }\r\n    }\r\n\r\n    public componentDidMount() {\r\n        document.addEventListener(\"click\", this.fetchBlur);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.removeEventListener(\"click\", this.fetchBlur);\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: ISelectProps) {\r\n        if (prevProps.options !== this.props.options ||\r\n                prevProps.options.length !== this.props.options.length) {\r\n            this.setState({\r\n                options: [].concat(this.props.options),\r\n                filtered: [].concat(this.props.options)\r\n            });\r\n        }\r\n    }\r\n\r\n    private closeDropdown(): void {\r\n        this.setState({\r\n            dropDownOpened: false\r\n        });\r\n    }\r\n\r\n    private openDropdown(): void {\r\n        this.setState({\r\n            dropDownOpened: true\r\n        });\r\n    }\r\n\r\n    private select(item: ISelectItem, e: HTMLDivElement): void {\r\n        let isValid: boolean = true;\r\n\r\n        if (this.props.validator) {\r\n            isValid = this.props.validator(item ? item.key : \"\");\r\n        }\r\n\r\n        this.props.onChange(item);\r\n        // not sure if setstate() is necessary here\r\n        this.setState({\r\n            selectedKey: item.key,\r\n            isValid: isValid\r\n        });\r\n        this.closeDropdown();\r\n    }\r\n\r\n    private getValue(key: string): string {\r\n        const item: ISelectItem = this.state.options.find(x => x.key === key);\r\n\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private filter(val: string) {\r\n        let items: ISelectItem[];\r\n\r\n        if (val && val !== \"\") {\r\n            items = this.state.options.filter(x => x.value.indexOf(val) > -1);\r\n        } else {\r\n            items = [].concat(this.state.options);\r\n        }\r\n\r\n        if (this.props.adjustFiltered) {\r\n            items = this.props.adjustFiltered(items, val);\r\n        }\r\n\r\n        this.setState({\r\n            filtered: items\r\n        });\r\n    }\r\n}\r\n\r\nexport interface ISelectState {\r\n    selectedKey: string;\r\n    filtered: ISelectItem[];\r\n    options: ISelectItem[];\r\n    dropDownOpened: boolean;\r\n    isValid: boolean;\r\n}","import * as React from \"react\";\r\nimport If from \"./If\";\r\nimport \"./../style/thumbnail.scss\";\r\nimport IThumbnailProps from \"../interfaces/IThumbnailProps\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nexport default class Thumbnail extends React.Component<IThumbnailProps, IThumbnailState> {\r\n    constructor(props: IThumbnailProps) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"thumbnail\">\r\n                <If expression={this.state.show}>\r\n                    <Overlay onClick={() => this.hide()}>\r\n                        <img src={this.props.src} onClick={() => this.hide()}/>\r\n                        <span></span>\r\n                    </Overlay>\r\n                </If>\r\n                <img src={this.props.src} onClick={() => this.show()}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private show(): void {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    private hide(): void {\r\n        this.setState({ show: false });\r\n    }\r\n}\r\n\r\ninterface IThumbnailState {\r\n    show: boolean;\r\n}","import * as React from \"react\";\r\nimport IGroupProps from \"../interfaces/IGroupProps\";\r\nimport If from \"./../elements/If\";\r\n\r\nexport default class Group extends React.Component<IGroupProps, {}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={`group ${this.props.className || \"\"}`}>\r\n                <If expression={!!this.props.header}>\r\n                    <div className=\"group-header\">{this.props.header}</div>\r\n                </If>\r\n                <div className=\"group-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}